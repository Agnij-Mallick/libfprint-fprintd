image: fedora:rawhide

variables:
  DEPENDENCIES: dbus-glib-devel pam-devel polkit-devel
                gtk-doc meson gettext gcovr intltool autoconf automake libtool
                gcc gcc-c++ glibc-devel make python3-dbusmock python3-libpamtest systemd-devel
  DEPENDENCIES_STABLE: $DEPENDENCIES libfprint-devel
  DEPENDENCIES_DEV: $DEPENDENCIES git
  # Sync'ed up with https://gitlab.freedesktop.org/libfprint/libfprint/blob/master/.gitlab-ci.yml
  # and stripped down to remove dependencies that are not strictly needed
  DEPENDENCIES_LIBFPRINT: libgusb-devel glib2-devel meson
                          gcc gcc-c++ glibc-devel
                          gobject-introspection-devel python3-cairo python3-gobject

.install_libfprint_dev: &install_libfprint_dev
  before_script:
    - dnf update -y --nogpgcheck && dnf install -y --nogpgcheck $DEPENDENCIES_LIBFPRINT $DEPENDENCIES_DEV
    - git clone https://gitlab.freedesktop.org/libfprint/libfprint.git
    - cd libfprint
    - meson . _build --prefix=/usr -Ddrivers=virtual_image -Ddoc=false
    - ninja -C _build
    - ninja -C _build install
    - cd ..
    # So we don't get error about this libfprint file
    - echo "libfprint/demo/gtk-libfprint-test.ui" >> po/POTFILES.skip

build_stable_autotools:
  # FIXME: Stable builds will fail until libfprintv 2 reaches rawhide
  allow_failure: true
  before_script:
    - dnf update -y --nogpgcheck && dnf install -y --nogpgcheck $DEPENDENCIES_STABLE
  script:
    - ./autogen.sh --disable-dependency-tracking
    - make
    - make install

build_dev_autotools:
  <<: *install_libfprint_dev
  script:
    - ./autogen.sh --disable-dependency-tracking
    - make
    - make install

test_dev_autotools:
  stage: test
  <<: *install_libfprint_dev
  script:
    - ./autogen.sh --disable-dependency-tracking
    - make
    - make check
  artifacts:
    name: log
    when: always
    paths:
      - tests/*.log

build_stable_meson:
  # FIXME: Stable builds will fail until libfprintv 2 reaches rawhide
  allow_failure: true
  before_script:
    - dnf update -y --nogpgcheck && dnf install -y --nogpgcheck $DEPENDENCIES_STABLE
  script:
    - meson _build
    - ninja -C _build -v
    - ninja -C _build -v install

build_dev_meson:
  <<: *install_libfprint_dev
  script:
    - meson _build --werror
    - ninja -C _build -v
    - ninja -C _build -v install
  artifacts:
    name: log
    when: on_failure
    paths:
      - _build/meson-logs/*.txt

test_dev_meson:
  stage: test
  <<: *install_libfprint_dev
  script:
    - meson _build -Db_coverage=true
    - meson test -C _build --verbose --no-stdsplit --timeout-multiplier 3
    - ninja -C _build coverage
  artifacts:
    name: log-and-coverage
    when: always
    paths:
      - _build/meson-logs
